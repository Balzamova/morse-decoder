const MORSE_TABLE = {
    '.-': 'a',
    '-...': 'b',
    '-.-.': 'c',
    '-..': 'd',
    '.': 'e',
    '..-.': 'f',
    '--.': 'g',
    '....': 'h',
    '..': 'i',
    '.---': 'j',
    '-.-': 'k',
    '.-..': 'l',
    '--': 'm',
    '-.': 'n',
    '---': 'o',
    '.--.': 'p',
    '--.-': 'q',
    '.-.': 'r',
    '...': 's',
    '-': 't',
    '..-': 'u',
    '...-': 'v',
    '.--': 'w',
    '-..-': 'x',
    '-.--': 'y',
    '--..': 'z',
    '.----': '1',
    '..---': '2',
    '...--': '3',
    '....-': '4',
    '.....': '5',
    '-....': '6',
    '--...': '7',
    '---..': '8',
    '----.': '9',
    '-----': '0',
};

/* Декодировать азбуку Морзе и вернуть строку. 
    Длина строки кратна 10. 10 обозначает точку (.), 11 обозначает тире (-). 
    Длина каждой закодированной буквы 10. Если длина закодированной буквы меньше 10, она заполняется слева 0.
    Пробел в строке **********.
    Пример.
    00101010100000000010001011101000101110100000111111**********00001011110000111111000010111000101110100000111010
    0010101010 -> .... -> h
    0000000010 -> . -> e
    0010111010 -> .-.. -> l
    0010111010 -> .-.. -> l
    0000111111 -> --- -> 0
    ********** -> пробел
    Решение
    1.сначала нужно разбить expr на array:
    array = ['0010101010', '0000000010', '0010111010', '0010111010', '0000111111'];
    2. в каждом array[i] распознать - / . /пробел и получить point = '-..-'
    **********" -> " "
    11 -> -
    10 -> .
    00 -> ""
    3. в правилах MORSE_TABLE, найти соответствующую point букву/цифру и вывести итог в string
    */

function decode(expr) {
    let string = ''; 
    let array = []; //разбиваем строку на массив из i элементов по 10 символов в каждом i
    
    for (let i = 0; i < expr.length; i += 10) {
        array.push(expr.slice(i, i + 10));
    }

    for (let i = 0; i < array.length; i++) { 
        if (array[i] === '**********') {
            string += ' '; 
            continue;
        }

        let point = '';
        //преобразуем array[i] в строку point
        for (let j = 0; j < array[i].length; j += 2) {
            switch (array[i].slice(j, j + 2)) {
                //берем по 2 эл-та внутри array[i] и переопределяем point
                case "10": point += "."; break;
                case "11": point += "-"; break;
                case "00": point += ""; break;
                default: break;
            }
        }
        //задаем string значение в соответствии с MORSE_TABLE по point
        string += MORSE_TABLE[point];
    }

    return string;
}

module.exports = {
    decode
}